- name: Create
  hosts: localhost
  gather_facts: false
#  environment:
#    DOCKER_HOST: tcp://host.docker.internal:2375
  vars:
    molecule_inventory:
      all:
        hosts: {}
        molecule: {}
    molecule_scenario: "{{ lookup('env', 'MOLECULE_SCENARIO_NAME') }}"
    molecule_scenario_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
    molecule_test_directory: "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}"

  tasks:
    - name: Debug molecule variables
      debug:
        msg:
          - "molecule_scenario: {{ molecule_scenario }}"
          - "molecule_scenario_directory: {{ molecule_scenario_directory }}"
          - "molecule_test_directory: {{ molecule_test_directory }}"

    - name: Create a container
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
        log_driver: json-file
      register: result
      loop: "{{ molecule_yml.platforms }}"

    - name: Fail if container is not running
      when: >
        item.container.State.ExitCode != 0 or
        not item.container.State.Running
      include_tasks:
        file: tasks/create-fail.yml
      loop: "{{ result.results }}"
      loop_control:
        label: "{{ item.container.Name }}"

    - name: Update IP Address in inventory
      replace:
        path: "{{ molecule_scenario_directory }}/inventory.ini"
        regexp: (?:[0-9]{1,3}\.){3}[0-9]{1,3}
        replace: "{{ result.results[0].container.NetworkSettings.IPAddress }}"
      delegate_to: localhost

    - name: Force inventory refresh
      meta: refresh_inventory

    - name: Fail if molecule group is missing
      assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}
      run_once: true # noqa: run-once[task]


# we want to avoid errors like "Failed to create temporary directory"
- name: Validate that inventory was refreshed
  hosts: molecule
  gather_facts: false
  tasks:
    - name: Check uname
      raw: uname -a
      register: result
      changed_when: false

    - name: Display uname info
      debug:
        msg: "{{ result.stdout }}"
